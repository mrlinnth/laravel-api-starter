## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  - httpMethods:
      - GET
    uri: api/auth/jwt/token
    metadata:
      title: 'Get a JWT via given credentials.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    queryParameters: [ ]
    bodyParameters: [ ]
    responses: [ ]
    responseFields: [ ]
  - httpMethods:
      - GET
    uri: api/auth/jwt/refresh
    metadata:
      title: 'Refreshes a jwt (ie. extends it''s TTL)'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    queryParameters: [ ]
    bodyParameters: [ ]
    responses: [ ]
    responseFields: [ ]
  - httpMethods:
      - DELETE
    uri: api/auth/jwt/token
    metadata:
      title: 'Log the user out (Invalidate the token).'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    queryParameters: [ ]
    bodyParameters: [ ]
    responses: [ ]
    responseFields: [ ]
  - httpMethods:
      - GET
    uri: api/auth/me
    metadata:
      title: 'Get the authenticated User.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    queryParameters: [ ]
    bodyParameters: [ ]
    responses: [ ]
    responseFields: [ ]
  - httpMethods:
      - GET
    uri: api/users
    metadata:
      title: 'Request to retrieve a collection of all items of this resource'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    queryParameters: [ ]
    bodyParameters: [ ]
    responses: [ ]
    responseFields: [ ]
  - httpMethods:
      - GET
    uri: 'api/users/{uuid}'
    metadata:
      title: 'Request to retrieve a single item of this resource'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: enim
        type: string
    queryParameters: [ ]
    bodyParameters: [ ]
    responses: [ ]
    responseFields: [ ]
  - httpMethods:
      - POST
    uri: api/users
    metadata:
      title: 'Request to create a new resource'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    queryParameters: [ ]
    bodyParameters: [ ]
    responses: [ ]
    responseFields: [ ]
  - httpMethods:
      - PUT
    uri: 'api/users/{uuid}'
    metadata:
      title: 'Request to create or replace a resource'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: quia
        type: string
    queryParameters: [ ]
    bodyParameters: [ ]
    responses: [ ]
    responseFields: [ ]
  - httpMethods:
      - PATCH
    uri: 'api/users/{uuid}'
    metadata:
      title: 'Request to update the specified resource'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: velit
        type: string
    queryParameters: [ ]
    bodyParameters: [ ]
    responses: [ ]
    responseFields: [ ]
  - httpMethods:
      - DELETE
    uri: 'api/users/{uuid}'
    metadata:
      title: 'Deletes a resource by UUID'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: voluptatibus
        type: string
    queryParameters: [ ]
    bodyParameters: [ ]
    responses: [ ]
    responseFields: [ ]
  - httpMethods:
      - GET
    uri: api/roles
    metadata:
      title: 'Request to retrieve a collection of all items of this resource'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    queryParameters: [ ]
    bodyParameters: [ ]
    responses: [ ]
    responseFields: [ ]
  - httpMethods:
      - GET
    uri: api/status
    metadata:
      title: 'Status (Example API Doc)'
      description: |-
        Check that the service is up. If everything is okay, you'll get a 200 OK response.

        Otherwise, the request will fail with a 400 error, and a response listing the failed services.
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    queryParameters: [ ]
    bodyParameters: [ ]
    responses:
      - status: 400
        content: '{"status": "down", "services": {"database": "up", "redis": "down"}}'
        headers: [ ]
        description: '400, Service is unhealthy'
      - status: 200
        content: '{"status":"up","services":{"database":"up","redis":"up"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
    responseFields:
      status:
        name: status
        description: 'The status of this API (`up` or `down`).'
        type: string
      services:
        name: services
        description: 'Map of each downstream service and their status (`up` or `down`).'
        type: object
  - httpMethods:
      - GET
    uri: api/admins
    metadata:
      title: 'Request to retrieve a collection of all items of this resource'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    queryParameters: [ ]
    bodyParameters: [ ]
    responses:
      - status: 200
        content: '{"current_page":1,"data":[{"_id":"5fd5010e7c471e3fdd54ae45","name":"admin","email":"admin@yopmail.com","registeredDate":1607794958088,"activationDate":0,"userId":{"$ref":"adminUser","$id":{"$oid":"5fd5010d7c471e3fdd54ae44"}},"isActive":true,"isDeleted":false,"isAdmin":false,"_class":"com.food.model.Admin"},{"_id":"5fd50cf17c471e3fdd54ae5c","name":"Shashi","email":"shashi@yopmail.com","registeredDate":1607798001794,"activationDate":0,"userId":{"$ref":"adminUser","$id":{"$oid":"5fd50cf17c471e3fdd54ae5b"}},"isActive":true,"isDeleted":false,"isAdmin":false,"_class":"com.food.model.Admin"},{"_id":"5fd74c3adff5fe74e8bd1b19","name":"YTre","email":"lalalal@yopmail.com","registeredDate":1607945274396,"activationDate":0,"userId":{"$ref":"adminUser","$id":{"$oid":"5fd74c3adff5fe74e8bd1b18"}},"isActive":true,"isDeleted":false,"isAdmin":false,"_class":"com.food.model.Admin"},{"_id":"5fd74fe7dff5fe74e8bd1b1b","name":"poiu","email":"admin@yopmail.comm","registeredDate":1607946215059,"activationDate":0,"userId":{"$ref":"adminUser","$id":{"$oid":"5fd74fe7dff5fe74e8bd1b1a"}},"isActive":true,"isDeleted":false,"isAdmin":false,"_class":"com.food.model.Admin"},{"_id":"5fd750aedff5fe74e8bd1b1d","name":"shashi","email":"shashitest@yopmail.com","registeredDate":1607946414838,"activationDate":0,"userId":{"$ref":"adminUser","$id":{"$oid":"5fd750aedff5fe74e8bd1b1c"}},"isActive":true,"isDeleted":false,"isAdmin":false,"_class":"com.food.model.Admin"},{"_id":"5fd841ac9b420c1302c6f871","name":"Shruti","email":"shru@yopmail.com","registeredDate":1608008108372,"activationDate":0,"userId":{"$ref":"adminUser","$id":{"$oid":"5fd841ac9b420c1302c6f870"}},"isActive":true,"isDeleted":false,"isAdmin":false,"_class":"com.food.model.Admin"},{"_id":"5fe0c2456ce3d90c268087f2","name":"Elaine Chong","email":"chongyeeleng7250@gmail.com","registeredDate":1608565317778,"activationDate":0,"userId":{"$ref":"adminUser","$id":{"$oid":"5fe0c2456ce3d90c268087f1"}},"isActive":true,"isDeleted":false,"isAdmin":false,"_class":"com.food.model.Admin"},{"_id":"5fe0c6d96ce3d90c26808802","name":"Txn Module Viewer","email":"elaine.chong@alphasirius.io","registeredDate":1608566489803,"activationDate":0,"userId":{"$ref":"adminUser","$id":{"$oid":"5fe0c6d96ce3d90c26808801"}},"isActive":true,"isDeleted":false,"isAdmin":false,"_class":"com.food.model.Admin"},{"_id":"5fe0c89a6ce3d90c26808804","name":"Report module viewer","email":"elaine.chong@gmail.com","registeredDate":1608566938628,"activationDate":0,"userId":{"$ref":"adminUser","$id":{"$oid":"5fe0c89a6ce3d90c26808803"}},"isActive":true,"isDeleted":false,"isAdmin":false,"_class":"com.food.model.Admin"},{"_id":"5fe0ca816ce3d90c26808806","name":"Role module viewer","email":"elaine.chong@yahoo.com","registeredDate":1608567425746,"activationDate":0,"userId":{"$ref":"adminUser","$id":{"$oid":"5fe0ca816ce3d90c26808805"}},"isActive":true,"isDeleted":false,"isAdmin":false,"_class":"com.food.model.Admin"},{"_id":"5fe5cf92ce0c027a446b83ff","name":"testdashbord","email":"dashboard@yopmail.com","registeredDate":1608896402869,"activationDate":0,"userId":{"$ref":"adminUser","$id":{"$oid":"5fe5cf92ce0c027a446b83fe"}},"isActive":true,"isDeleted":false,"isAdmin":false,"_class":"com.food.model.Admin"},{"_id":"5fe6bf3d691a452bc669aa36","name":"FrankUAT5","email":"frankuat5@yopmail.com","registeredDate":1608957757715,"activationDate":0,"userId":{"$ref":"adminUser","$id":{"$oid":"5fe6bf3d691a452bc669aa35"}},"isActive":true,"isDeleted":false,"isAdmin":false,"_class":"com.food.model.Admin"},{"_id":"5fec252be6364a6a6b5bc005","name":"testSub","email":"testsub@yopmail.com","registeredDate":1609311531650,"activationDate":0,"userId":{"$ref":"adminUser","$id":{"$oid":"5fec252be6364a6a6b5bc004"}},"isActive":true,"isDeleted":false,"isAdmin":false,"_class":"com.food.model.Admin"},{"_id":"5ff86504eb5b110d5c0c5e8d","name":"bactestu","email":"abc@yopmail.com","registeredDate":1610114308035,"activationDate":0,"userId":{"$ref":"adminUser","$id":{"$oid":"5ff86504eb5b110d5c0c5e8c"}},"isActive":true,"isDeleted":false,"isAdmin":false,"_class":"com.food.model.Admin"},{"_id":"6058e5b5bec760195366ab44","name":"Jonny","email":"jonny@alphasirius.io","registeredDate":1616438708962,"activationDate":0,"userId":{"$ref":"adminUser","$id":{"$oid":"6058e5b4bec760195366ab43"}},"isActive":true,"isDeleted":false,"isAdmin":false,"_class":"com.food.model.Admin"}],"first_page_url":"http:\/\/laravel-api.test\/api\/admins?page=1","from":1,"last_page":2,"last_page_url":"http:\/\/laravel-api.test\/api\/admins?page=2","links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/laravel-api.test\/api\/admins?page=1","label":"1","active":true},{"url":"http:\/\/laravel-api.test\/api\/admins?page=2","label":"2","active":false},{"url":"http:\/\/laravel-api.test\/api\/admins?page=2","label":"Next &raquo;","active":false}],"next_page_url":"http:\/\/laravel-api.test\/api\/admins?page=2","path":"http:\/\/laravel-api.test\/api\/admins","per_page":15,"prev_page_url":null,"to":15,"total":16}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
    responseFields: [ ]
  - httpMethods:
      - GET
    uri: 'api/admins/{uuid}'
    metadata:
      title: 'Request to retrieve a single item of this resource'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: officiis
        type: string
    queryParameters: [ ]
    bodyParameters: [ ]
    responses: [ ]
    responseFields: [ ]
  - httpMethods:
      - POST
    uri: api/admins
    metadata:
      title: 'Request to create a new resource'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    queryParameters: [ ]
    bodyParameters: [ ]
    responses: [ ]
    responseFields: [ ]
  - httpMethods:
      - PUT
    uri: 'api/admins/{uuid}'
    metadata:
      title: 'Request to create or replace a resource'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: quia
        type: string
    queryParameters: [ ]
    bodyParameters: [ ]
    responses: [ ]
    responseFields: [ ]
  - httpMethods:
      - PATCH
    uri: 'api/admins/{uuid}'
    metadata:
      title: 'Request to update the specified resource'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: mollitia
        type: string
    queryParameters: [ ]
    bodyParameters: [ ]
    responses: [ ]
    responseFields: [ ]
  - httpMethods:
      - DELETE
    uri: 'api/admins/{uuid}'
    metadata:
      title: 'Deletes a resource by UUID'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: atque
        type: string
    queryParameters: [ ]
    bodyParameters: [ ]
    responses: [ ]
    responseFields: [ ]
